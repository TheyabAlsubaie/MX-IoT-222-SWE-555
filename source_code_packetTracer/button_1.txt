from cli import *
from gui import *
import json
import mqttclient
from time import *
from gpio import *
from physical import *



output = 0										# var output
graphic = 1									# var graphic
state = None									# var state
topic = 'button1'									#comment topic name
brokerAddress='192.168.25.2'								#comment Broker Address
username= 'user1'									#comment Username
password = '1234'									#comment Password






def on_connect(status, msg, packet):			#show connection status
	if status == "Success" or status == "Error":
		print status + ": " + msg
	elif status == "":
		print msg
	
def on_disconnect(status, msg, packet):			#show disconnection status
	if status == "Success" or status == "Error":
		print status + ": " + msg
	elif status == "":
		print msg
	

def on_subscribe(status, msg, packet):			#show subscription status
	if status == "Success" or status == "Error":
		print status + ": " + msg
	elif status == "":
		print msg
	

def on_unsubscribe(status, msg, packet):		#show unsubscription status
	if status == "Success" or status == "Error":
		print status + ": " + msg
	elif status == "":
		print msg
	

def on_publish(status, msg, packet):			#show publishing status
	if status == "Success" or status == "Error":
		print status + ": " + msg
	elif status == "":
		print msg
	
def on_message_received(status, msg, packet):  #Invoked when new message received
	# check received message and take action
	if status == "Success" or status == "Error":
		print status + ": " + msg
	
	elif status == "":
		print msg
	
	
	
	
	
def setup ():
    # set initial button state
    update(False)



def mouseEvent (pressed, x, y, firstPressed):
    if firstPressed:
        update(True)
    elif not pressed:
        update(False)



def update (newState):
    global state
    if newState is not state:
        state = newState
        # write to LED pin
        digitalWrite(graphic, ( HIGH  if state  else LOW ) )
        digitalWrite(output, ( HIGH  if state  else LOW ) )
        if state:
        	mqttclient.publish(topic,str('pushed'),'2')		#comment publish a message to the topic button1 once the user pushes the button.
    setDeviceProperty(getName(), "state", state)	
	
	
	
	
	

def main():
	setup()
	mqttclient.init()
	mqttclient.onConnect(on_connect)
	mqttclient.onDisconnect(on_disconnect)
	mqttclient.onSubscribe(on_subscribe)
	mqttclient.onUnsubscribe(on_unsubscribe)
	mqttclient.onPublish(on_publish)
	mqttclient.onMessageReceived(on_message_received)
	print('Client Initialized')
	mqttclient.connect(broker_add,username,password)
	while not mqttclient.state()["connected"]:		#wait until connected
 		pass	
	
	while True:
		delay(60000)

if __name__ == "__main__":
	main()
